<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./sproject_html.xsl"?>
<!DOCTYPE sproject SYSTEM "sproject.dtd">
<sproject>
    <course database="Oracle" version="11">
        <cname>Databázové systémy</cname>
            <code>BIE-DBS.21</code>
            <semester>B212</semester>
            <seminar>Wednesday 18:00, Both weeks, paralelka 1242065316305</seminar>
    </course>
        <author>
            <aname>Aleksandr Levin</aname>
            <uname>levinale</uname>
            <email>levinale@fit.cvut.cz</email>
        </author>
    <content>
        <declaration>I declare that I have developed my semestral work independently. All the sources I used are listed in the section References.</declaration>
            <title>World&apos;s spy network database</title>
        <description>
            <title>Description</title>
                    <para>There are a lot of different professionals in our world and probably the most dangerous for world&apos;s stability are spies, so the aim of our secret network is to control them.</para>
                    <para>Every one human on Earth has it&apos;s name, despite being spy or not, so the name is a main characterisitic of our clients.</para>
                    <para>Nevertheless, for spy it is an ordinary thing to have more than one name, so our company have to know every and one name of these secret agents, including their real ones. Thanks to governments, it is forbidden for spies to have more than 2 fake names.</para>
                    <para>Spies work at special agencies which are uder control of different countries, so to control them we need to know both, agencies and countries of agencies.</para>
                    <para>By the way, it would come in handy if we will know the appearance of spies, including their gender, age, special characteristics, like scars on their face and body and so on.</para>
                    <para>Also, in order to have some kind of control on them, we need to have some info about their private life, like whether they are married or not, do the have pets in their houses or they don&apos;t.</para>
                    <para>Suddenly, it may be needed to contact our secret agents in complete secrecy, so we need to have some sort of special mark, special sign, that will tell the agents that they need to come to our secret office.</para>
                    <para>Also, it would be useful, if we will have their current geo location, to see their movements and coordinates in real time.</para>
                    <para>Plus, we need to have information about languages that spies are speaking on, in order to comminicate with them on their preferable language.</para>
        </description>
        <data_model>
            <title>Conceptual schema</title>
            <dm_picture>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="conceptual_schema.png"/>
                    </imageobject>
                </mediaobject>
            </dm_picture>
            <dm_discussion>
                        <para>There are no loops in my database</para>
            </dm_discussion>
        </data_model>
        <relational_model>
            <title>Relational schema</title>
            <rm_picture>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="relational_schema.png"/>
                    </imageobject>
                </mediaobject>
            </rm_picture>
        </relational_model>
        <queries>
            <title>Queries</title>
            <dotazy>
                    <dotaz dotaz_id="D5">
                        <popis_dotazu>
                                <para>List name of all agents who speak Japanese</para>
                        </popis_dotazu>
                            <relacni_algebra>Agents (language=&apos;Japanese&apos;)[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM AGENTS
WHERE language = &apos;Japanese&apos;;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D6">
                        <popis_dotazu>
                                <para>Select agents with dog as a pet</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents*Pets}(species = &apos;dog&apos;)[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM AGENTS
NATURAL JOIN PETS
WHERE species = &apos;dog&apos;;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D7">
                        <popis_dotazu>
                                <para>Select agents who has a pet</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents [agents_id=P_id] Pets [agents_id→P_id] }[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM AGENTS
JOIN (
    SELECT DISTINCT agents_id AS P_id
    FROM PETS
) R1 ON agents_id = P_id;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D8">
                        <popis_dotazu>
                                <para>Select all agents who has some way to make pressure on them and at the same time are enlisted in some spy agency</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents &lt;* Ways_to_make_pressure
∩
Agents &lt;agents_id=E_id] Enlisted_in [agents_id→E_id]}[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM (
    SELECT DISTINCT agents_id,
                    country_name,
                    real_name,
                    fake_name1,
                    fake_name2,
                    calling_sign,
                    language,
                    date_of_birth
    FROM AGENTS
    NATURAL JOIN WAYS_TO_MAKE_PRESSURE
    INTERSECT
    SELECT DISTINCT *
    FROM AGENTS AGENTS1
) R1
WHERE EXISTS (
    SELECT DISTINCT 1
    FROM (
        SELECT DISTINCT agents_id AS E_id
        FROM ENLISTED_IN
    ) R2
    WHERE agents_id = E_id
);</sql>
                    </dotaz>
                    <dotaz dotaz_id="D9">
                        <popis_dotazu>
                                <para>Select agents who are registered in their apartments before 01.01.2002 or who are registered until 03.02.2050 or later</para>
                        </popis_dotazu>
                            <relacni_algebra>{{{Agents*Lives_in}(Lives_from&lt;&apos;01.01.2002&apos;)} 
∪
{{Agents*Lives_in}(Lives_until&gt;&apos;02.02.2050&apos;)}}
[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM (
    SELECT DISTINCT *
    FROM AGENTS
    NATURAL JOIN LIVES_IN
    WHERE lives_from &lt; TO_DATE(&apos;01.01.2002&apos;,&apos;dd.mm.yyyy&apos;)
    UNION
    SELECT DISTINCT *
    FROM AGENTS AGENTS1
    NATURAL JOIN LIVES_IN LIVES_IN1
    WHERE lives_until &gt; TO_DATE(&apos;02.02.2050&apos;,&apos;dd.mm.yyyy&apos;)
) R1;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D10">
                        <popis_dotazu>
                                <para>Select all agents who don&apos;t have any ways to make pressure on them</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents !&lt;* Ways_to_make_pressure}[real_name]</relacni_algebra>
                            <sql>--First
Select real_name
from Agents A
where A.agents_id not in (select agents_id
                      from Ways_to_make_pressure);
-- Second
Select real_name
from Agents A
where not exists (select 1
                      from Ways_to_make_pressure R
		    where A.agents_id = R.agents_id);
-- Third
Select real_name from Agents  
except
select A.real_name from Agents A join Ways_to_make_pressure R on (R.agents_id=A.agents_id);</sql>
                    </dotaz>
                    <dotaz dotaz_id="D11">
                        <popis_dotazu>
                                <para>Select agents who has only corgi as a pet</para>
                        </popis_dotazu>
                            <relacni_algebra>{{Agents * Pets}
 \
 {{Agents * Pets} \ {Agents * Pets}(breed=&apos;corgi&apos;∧species=&apos;dog&apos;)}}[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM (
    SELECT DISTINCT *
    FROM AGENTS
    NATURAL JOIN PETS
    EXCEPT (
        SELECT DISTINCT *
        FROM AGENTS AGENTS1
        NATURAL JOIN PETS PETS1
        EXCEPT
        SELECT DISTINCT *
        FROM AGENTS AGENTS2
        NATURAL JOIN PETS PETS2
        WHERE breed = &apos;corgi&apos; AND species = &apos;dog&apos;
    )
) R1;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D12">
                        <popis_dotazu>
                                <para>Select an agent who has all special appearance marks</para>
                        </popis_dotazu>
                            <relacni_algebra>{{Has_a_mark÷Special_appearance_marks[mark_id]}
*
Agents}[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM (
    SELECT DISTINCT agents_id
    FROM HAS_A_MARK
    EXCEPT
    SELECT DISTINCT agents_id
    FROM (
        SELECT DISTINCT *
        FROM (
            SELECT DISTINCT agents_id
            FROM HAS_A_MARK
        ) R1
        CROSS JOIN (
            SELECT DISTINCT mark_id
            FROM SPECIAL_APPEARANCE_MARKS
        ) R2
        EXCEPT
        SELECT DISTINCT *
        FROM HAS_A_MARK
    ) R3
) R4
NATURAL JOIN AGENTS;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D13">
                        <popis_dotazu>
                                <para>Agents pairs with the same language</para>
                        </popis_dotazu>
                            <relacni_algebra>{{Agents[language -&gt; la1,agents_id-&gt; id1,real_name-&gt; name1]}
    [la1=la2 ∧ id1 &lt; id2] 
    {Agents[language -&gt; la2,agents_id-&gt; id2,real_name-&gt; name2]}
}[id1,name1,id2,name2]</relacni_algebra>
                            <sql>SELECT DISTINCT id1,
                name1,
                id2,
                name2
FROM (
    SELECT DISTINCT language AS la1,
                    agents_id AS id1,
                    real_name AS name1
    FROM AGENTS
) R1
JOIN (
    SELECT DISTINCT language AS la2,
                    agents_id AS id2,
                    real_name AS name2
    FROM AGENTS AGENTS1
) R2 ON la1 = la2 AND id1 &lt; id2;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D14">
                        <popis_dotazu>
                                <para>Find out how many dogs does have an agent named Boris Johnson</para>
                        </popis_dotazu>
                            <sql>Select count(*) from Pets P, Agents A 
    where P.species=&apos;dog&apos; AND
        A.real_name=&apos;Boris Johnson&apos;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D15">
                        <popis_dotazu>
                                <para>List all agents and their amount of pets</para>
                        </popis_dotazu>
                            <sql>select agents_id, real_name,
       (select count(*)
        from Pets P
        where P.agents_id = A.agents_id) as Pets_count
from Agents A;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D16">
                        <popis_dotazu>
                                <para>Show all spies that has a scar on their left leg</para>
                        </popis_dotazu>
                            <sql>Select distinct real_name
    from (Agents full outer join Has_a_mark using(agents_id)) natural join Special_appearance_marks
        where mark=&apos;scar&apos; AND body_part=&apos;left leg&apos;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D17">
                        <popis_dotazu>
                                <para>Select agents which are enlisted at least in one agency</para>
                        </popis_dotazu>
                            <sql>select distinct real_name 
    from Agents right outer join Enlisted_in using (agents_id)
    </sql>
                    </dotaz>
                    <dotaz dotaz_id="D18">
                        <popis_dotazu>
                                <para>List all spies with pets and their data</para>
                        </popis_dotazu>
                            <sql>Select distinct real_name, species, breed, count (pets_id) 
    from Agents natural join Pets
    group by agents_id, pets_id</sql>
                    </dotaz>
                    <dotaz dotaz_id="D19">
                        <popis_dotazu>
                                <para>Select agents who has shark as a pet, then order the agents by their pets and print out only those who has more than 1 pet</para>
                        </popis_dotazu>
                            <sql>Select real_name from Agents A natural join Pets
    where species=&apos;shark&apos; group by agents_id having (select count(pets_id) from Agents B natural join Pets where A.real_name=B.real_name)&gt;1
        order by count(pets_id)</sql>
                    </dotaz>
                    <dotaz dotaz_id="D20">
                        <popis_dotazu>
                                <para>Make a view of spies that do not have a place to live, then, based on this view, find a homeless spy that can speak French</para>
                        </popis_dotazu>
                            <sql>create view Homeless_spies as 
    select A.* from Agents A except select B.* from Agents B natural join Lives_in;
    select real_name from Homeless_spies where language = &apos;French&apos;;
drop view Homeless_spies</sql>
                    </dotaz>
                    <dotaz dotaz_id="D21">
                        <popis_dotazu>
                                <para>Enter enlistment data about agent named Jory Thwaites</para>
                        </popis_dotazu>
                            <sql>delete from Enlisted_in
where agents_id in (select agents_id from Agents where real_name=&apos;Jory Thwaites&apos;);


insert into Enlisted_in  (agency_id, agents_id, enlisted_from, enlisted_until) 
select S.agency_id,A.agents_id,to_date(&apos;01.01.2000&apos;,&apos;DD.MM.YYYY&apos;),to_date(&apos;02.01.2025&apos;,&apos;DD.MM.YYYY&apos;)
from Agents A, Spy_agencies S
where  real_name=&apos;Jory Thwaites&apos;;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D22">
                        <popis_dotazu>
                                <para>Select all pets of an agent with first fake name Stewart Lumox</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents*Pets}(fake_name1=&apos;Stewart Lumox&apos;)[species,breed]</relacni_algebra>
                            <sql>SELECT DISTINCT species,
                breed
FROM AGENTS
NATURAL JOIN PETS
WHERE fake_name1 = &apos;Stewart Lumox&apos;;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D23">
                        <popis_dotazu>
                                <para>Update enlistment date for an agent with id 11 if his date of enlistment is smaller than 01.02.2014</para>
                        </popis_dotazu>
                            <relacni_algebra>∧∧</relacni_algebra>
                            <sql>Update Enlisted_in
Set enlisted_from = &apos;01.02.2014&apos;
where (Select agents_id from enlisted_in where enlisted_from&lt; &apos;01.02.2014&apos; and agents_id=11) = 11;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D24">
                        <popis_dotazu>
                                <para>Find all agents who has a registration in an apartments from 02.02.2014</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents*Lives_in*Apartments}(lives_from&gt;&apos;01.02.2014&apos;)</relacni_algebra>
                            <sql>SELECT DISTINCT *
FROM AGENTS
NATURAL JOIN LIVES_IN
NATURAL JOIN APARTMENTS
WHERE lives_from &gt; TO_DATE(&apos;01.02.2014&apos;,&apos;dd.mm.yyyy&apos;);</sql>
                    </dotaz>
                    <dotaz dotaz_id="D25">
                        <popis_dotazu>
                                <para>Print all agents who has some way of making pressure on them</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents×Ways_to_make_pressure[agents_id→W_id]}(agents_id=W_id)[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM AGENTS
CROSS JOIN (
    SELECT DISTINCT agents_id AS W_id
    FROM WAYS_TO_MAKE_PRESSURE
) R1
WHERE agents_id = W_id;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D26">
                        <popis_dotazu>
                                <para>Select the country of agents with flashlight calling sign </para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents*countries}(calling_sign=&apos;flashlight&apos;)[country_name]</relacni_algebra>
                            <sql>SELECT DISTINCT country_name
FROM AGENTS
NATURAL JOIN COUNTRIES
WHERE calling_sign = &apos;flashlight&apos;;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D27">
                        <popis_dotazu>
                                <para>Select all agents that can be pressured by their pets</para>
                        </popis_dotazu>
                            <relacni_algebra>{Agents*Ways_to_make_pressure}(type=&apos;pet&apos;)[real_name]</relacni_algebra>
                            <sql>SELECT DISTINCT real_name
FROM AGENTS
NATURAL JOIN WAYS_TO_MAKE_PRESSURE
WHERE type = &apos;pet&apos;;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D29">
                        <popis_dotazu>
                                <para>List all agents</para>
                        </popis_dotazu>
                            <relacni_algebra>Agents</relacni_algebra>
                            <sql>SELECT DISTINCT *
FROM AGENTS;</sql>
                    </dotaz>
                    <dotaz dotaz_id="D30">
                        <popis_dotazu>
                                <para>Select all agents with more than 1 pet</para>
                        </popis_dotazu>
                            <sql>Select distinct real_name from Agents A natural join Pets
    where (select count(pets_id) from Agents B natural join Pets where A.real_name=B.real_name)&gt;1</sql>
                    </dotaz>
            </dotazy>
            <pokryti_dotazu>
                        <radek>
                            <kategorie>A</kategorie>
                            <odkazy>
                                    <link url="#D6">D6</link>
                                    <link url="#D7">D7</link>
                                    <link url="#D8">D8</link>
                                    <link url="#D9">D9</link>
                                    <link url="#D10">D10</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                                    <link url="#D13">D13</link>
                                    <link url="#D16">D16</link>
                                    <link url="#D17">D17</link>
                                    <link url="#D18">D18</link>
                                    <link url="#D19">D19</link>
                                    <link url="#D20">D20</link>
                                    <link url="#D22">D22</link>
                                    <link url="#D24">D24</link>
                                    <link url="#D26">D26</link>
                                    <link url="#D27">D27</link>
                                    <link url="#D30">D30</link>
                            </odkazy>
                            <kategorie_popis>A - Positive query on at least two joined tables</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>AR</kategorie>
                            <odkazy>
                                    <link url="#D6">D6</link>
                                    <link url="#D7">D7</link>
                                    <link url="#D8">D8</link>
                                    <link url="#D9">D9</link>
                                    <link url="#D10">D10</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                                    <link url="#D13">D13</link>
                                    <link url="#D22">D22</link>
                                    <link url="#D24">D24</link>
                                    <link url="#D26">D26</link>
                                    <link url="#D27">D27</link>
                            </odkazy>
                            <kategorie_popis>A (RA) - Positive query on at least two joined tables</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>B</kategorie>
                            <odkazy>
                                    <link url="#D10">D10</link>
                            </odkazy>
                            <kategorie_popis>B - Negative query on at least two joined tables</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>C</kategorie>
                            <odkazy>
                                    <link url="#D11">D11</link>
                            </odkazy>
                            <kategorie_popis>C - Select only those related to...</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>D1</kategorie>
                            <odkazy>
                                    <link url="#D12">D12</link>
                            </odkazy>
                            <kategorie_popis>D1 - Select all related to - universal quantification query</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>D2</kategorie>
                            <odkazy>
                                    <link url="#D12">D12</link>
                            </odkazy>
                            <kategorie_popis>D2 - Result check of D1 query</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>F1</kategorie>
                            <odkazy>
                                    <link url="#D7">D7</link>
                                    <link url="#D10">D10</link>
                                    <link url="#D13">D13</link>
                            </odkazy>
                            <kategorie_popis>F1 - JOIN ON</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>F2</kategorie>
                            <odkazy>
                                    <link url="#D6">D6</link>
                                    <link url="#D8">D8</link>
                                    <link url="#D9">D9</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                                    <link url="#D16">D16</link>
                                    <link url="#D17">D17</link>
                                    <link url="#D18">D18</link>
                                    <link url="#D19">D19</link>
                                    <link url="#D20">D20</link>
                                    <link url="#D22">D22</link>
                                    <link url="#D24">D24</link>
                                    <link url="#D26">D26</link>
                                    <link url="#D27">D27</link>
                                    <link url="#D30">D30</link>
                            </odkazy>
                            <kategorie_popis>F2 - NATURAL JOIN|JOIN USING</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>F2R</kategorie>
                            <odkazy>
                                    <link url="#D6">D6</link>
                                    <link url="#D8">D8</link>
                                    <link url="#D9">D9</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                                    <link url="#D22">D22</link>
                                    <link url="#D24">D24</link>
                                    <link url="#D26">D26</link>
                                    <link url="#D27">D27</link>
                            </odkazy>
                            <kategorie_popis>F2 (RA) - NATURAL JOIN|JOIN USING</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>F3</kategorie>
                            <odkazy>
                                    <link url="#D12">D12</link>
                                    <link url="#D25">D25</link>
                            </odkazy>
                            <kategorie_popis>F3 - CROSS JOIN</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>F4</kategorie>
                            <odkazy>
                                    <link url="#D17">D17</link>
                            </odkazy>
                            <kategorie_popis>F4 - LEFT|RIGHT OUTER JOIN</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>F5</kategorie>
                            <odkazy>
                                    <link url="#D16">D16</link>
                            </odkazy>
                            <kategorie_popis>F5 - FULL (OUTER) JOIN</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>G1</kategorie>
                            <odkazy>
                                    <link url="#D8">D8</link>
                                    <link url="#D10">D10</link>
                                    <link url="#D21">D21</link>
                                    <link url="#D23">D23</link>
                                    <link url="#D30">D30</link>
                            </odkazy>
                            <kategorie_popis>G1 - Nested query in WHERE clause</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>G1R</kategorie>
                            <odkazy>
                                    <link url="#D8">D8</link>
                                    <link url="#D10">D10</link>
                                    <link url="#D23">D23</link>
                            </odkazy>
                            <kategorie_popis>G1 (RA) - Nested query in WHERE clause</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>G2</kategorie>
                            <odkazy>
                                    <link url="#D7">D7</link>
                                    <link url="#D8">D8</link>
                                    <link url="#D9">D9</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                                    <link url="#D13">D13</link>
                            </odkazy>
                            <kategorie_popis>G2 - Nested query in FROM clause</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>G3</kategorie>
                            <odkazy>
                                    <link url="#D15">D15</link>
                            </odkazy>
                            <kategorie_popis>G3 - Nested query in SELECT clause</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>G4</kategorie>
                            <odkazy>
                                    <link url="#D8">D8</link>
                                    <link url="#D10">D10</link>
                            </odkazy>
                            <kategorie_popis>G4 - Correlated nested query (EXISTS|NOT EXISTS)</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>H1</kategorie>
                            <odkazy>
                                    <link url="#D9">D9</link>
                            </odkazy>
                            <kategorie_popis>H1 - Set unification - UNION</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>H2</kategorie>
                            <odkazy>
                                    <link url="#D10">D10</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                                    <link url="#D20">D20</link>
                            </odkazy>
                            <kategorie_popis>H2 - Set difference - MINUS or EXCEPT</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>H2R</kategorie>
                            <odkazy>
                                    <link url="#D10">D10</link>
                                    <link url="#D11">D11</link>
                                    <link url="#D12">D12</link>
                            </odkazy>
                            <kategorie_popis>H2 (RA) - Set difference - MINUS or EXCEPT</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>H3</kategorie>
                            <odkazy>
                                    <link url="#D8">D8</link>
                            </odkazy>
                            <kategorie_popis>H3 - Set intersection - INTERSECT</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>I1</kategorie>
                            <odkazy>
                                    <link url="#D14">D14</link>
                                    <link url="#D15">D15</link>
                                    <link url="#D18">D18</link>
                                    <link url="#D19">D19</link>
                                    <link url="#D30">D30</link>
                            </odkazy>
                            <kategorie_popis>I1 - Aggregate functions (count|sum|min|max|avg)</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>I2</kategorie>
                            <odkazy>
                                    <link url="#D18">D18</link>
                                    <link url="#D19">D19</link>
                            </odkazy>
                            <kategorie_popis>I2 - Aggregate function over grouped rows - GROUP BY (HAVING)</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>J</kategorie>
                            <odkazy>
                                    <link url="#D10">D10</link>
                            </odkazy>
                            <kategorie_popis>J - Same query in 3 different sql statements</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>K</kategorie>
                            <odkazy>
                                    <link url="#D19">D19</link>
                            </odkazy>
                            <kategorie_popis>K - All clauses in one query - SELECT FROM WHERE GROUP BY HAVING ORDER BY</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>L</kategorie>
                            <odkazy>
                                    <link url="#D20">D20</link>
                            </odkazy>
                            <kategorie_popis>L - View</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>M</kategorie>
                            <odkazy>
                                    <link url="#D20">D20</link>
                            </odkazy>
                            <kategorie_popis>M - Query over a view</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>N</kategorie>
                            <odkazy>
                                    <link url="#D21">D21</link>
                            </odkazy>
                            <kategorie_popis>N - INSERT, which insert a set of rows, which are the result of another subquery (an INSERT command which has VALUES clause replaced by a nested query.</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>O</kategorie>
                            <odkazy>
                                    <link url="#D23">D23</link>
                            </odkazy>
                            <kategorie_popis>O - UPDATE with nested SELECT statement</kategorie_popis>
                        </radek>
                        <radek>
                            <kategorie>P</kategorie>
                            <odkazy>
                                    <link url="#D21">D21</link>
                            </odkazy>
                            <kategorie_popis>P - DELETE with nested SELECT statement</kategorie_popis>
                        </radek>
            </pokryti_dotazu>
        </queries>
        <scripts>
            <title>Scripts</title>
            <para>
                <link url="./create.sql">create.sql</link>
            </para>
            <para>
                <link url="./insert.sql">insert.sql</link>
            </para>
        </scripts>
        <conclussions>
            <title>Conclusion</title>
                    <para>Our database provides us with some pieces of very useful information  connected to spies and mean of controlling them. </para>
        </conclussions>
        <references>
            <title>References</title>
                    <para>There is no references used in my database.</para>
        </references>
    </content>
</sproject>
